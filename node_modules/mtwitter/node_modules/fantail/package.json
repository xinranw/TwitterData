{
  "name": "fantail",
  "description": "Simple schedule-managed queue",
  "version": "0.2.0",
  "author": {
    "name": "Félix Saparelli",
    "email": "me@passcod.name"
  },
  "main": "./index",
  "repository": {
    "type": "git",
    "url": "https://github.com/passcod/fantail.git"
  },
  "keywords": [
    "queue",
    "scheduler"
  ],
  "dependencies": {
    "underscore": "1.4.x"
  },
  "devDependencies": {
    "jshint": "1.x.x",
    "mocha": "1.9.x",
    "docco": "0.6.x"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha --reporter spec",
    "lint": "./node_modules/.bin/jshint --config=./jshint.json index.js test",
    "doc": "./node_modules/.bin/docco -o doc index.js"
  },
  "readme": "♫ ♭♩ Fantail\n============\n\n[![Build Status](https://travis-ci.org/passcod/fantail.png)](//travis-ci.org/passcod/fantail)\n[![NPM version](https://badge.fury.io/js/fantail.png)](//npmjs.org/package/fantail)\n[![Dependency Status](https://gemnasium.com/passcod/fantail.png)](//gemnasium.com/passcod/fantail)\n\n```javascript\nvar Fantail = require('fantail');\n```\n\n\n## Instantiation\n\n```javascript\nvar sch = new Fantail;\n```\n\n### Options\n\nOptions are set at instantiation and can't be modified afterwards.\n\n```javascript\nvar sch = new Fantail({\n  debug: false,     // Expose queues and handlers.\n  throttle: 200,    // Run handlers (at most once) every 200 milliseconds\n  immediate: false  // .start() immediately.\n});\n```\n\n\n## .push(arg: any [, arg2: any [, …]])\n\nYou can push to the queue whenever you wish.\n\n```javascript\nsch.push(foo);\n```\n\nYou can push multiple values at the same time.\n\n```javascript\nsch.push(bar, baz);\n```\n\n\n## .addHandler(name: string, func: function)\n\nHandlers process items. They are named.\n\n```javacript\nsch.addHandler('something', function(item) {\n  // do something\n});\n```\n\n\n## .addPicker(iter: function, time: int, limit: int)\n\nPickers filter the queue. They are run every `time` milliseconds, and can\nbe limited to `limit` items per run (`limit` is optional); the default is to go\nthrough everything. They are passed the item and nothing else, and have access\nto two methods on the `this` object:\n\n- `this.stop()` stops the current picker run after the present iteration.\n\n- `this.handle(name: string)` schedules the handler `name` to be\n  executed with the item as parameter. As soon as `this.handle()`\n  is called, the item is removed from the queue. Subsequent calls\n  to `this.handle()` *within the same function* will schedule\n  additional handlers for the same item.\n\n```javascript\nvar pickerId = sch.addPicker(function(item) {\n  if (item % 2 === 0) {\n    this.handle('something');\n  }\n  \n  if (item === 42) {\n    this.stop();\n  }\n});\n```\n\nIt returns the `pickerId`, which can be used to modify the picker at runtime.\nThis is mostly useful to adjust the `interval` or `limit`. A limit of 0 will\ndisable the picker.\n\n\n## .start()\n\nStart processing the queue. Useful if you need to do some preparation before\nfiring things off but still want to be able to push things onto the queue.\n\n\n## .pickers\n\nAccess the array of pickers. This is useful to modify a picker, see above.\n\n\n## .started\n\nYou may want to know whether you've called start() yet. Or not.\n\n## Debug mode\n\nUsing `debug: true` in the instantiation config exposes both internal queues\n(`todo` and `doing`) and the `handlers` object. These are not useful for most\ncases, but if you need them they're just a flag away, no need to tweak shit.\n\n\nCommunity\n=========\n\n- All authors and contributors are listed in the `package.json`.\n- Pull requests need to adhere to the [style guide].\n- API is tested. Run `npm test` to ensure it works.\n- Code is linted. Run `npm run-script lint` to ensure you're good.\n- No license. This is released in the public domain.\n\n[style guide]: //github.com/passcod/node-style-guide",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/passcod/fantail/issues"
  },
  "homepage": "https://github.com/passcod/fantail",
  "_id": "fantail@0.2.0",
  "dist": {
    "shasum": "47a5c725d9720fb4ab0005c3305eee80933ef407"
  },
  "_from": "fantail@0.2.x",
  "_resolved": "https://registry.npmjs.org/fantail/-/fantail-0.2.0.tgz"
}
